"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import { Edit3, Check, X, Camera, ArrowLeft } from "lucide-react";
import { typography } from "@/app/styles/typography";
import { useAuth } from "@/app/hooks/useAuth";
import { profileService } from "@/lib/simple-database";
import toast from "react-hot-toast";

export default function ProfilePage() {
  const { user, loading, isAuthenticated, setUser } = useAuth();
  const router = useRouter();

  // Editing states
  const [editingField, setEditingField] = useState<string | null>(null);
  const [editValues, setEditValues] = useState({
    username: "",
    email: "",
  });
  const [saving, setSaving] = useState(false);

  useEffect(() => {
    if (!loading && !isAuthenticated) {
      router.push("/login");
    }
  }, [loading, isAuthenticated, router]);

  // Initialize edit values when user data loads
  useEffect(() => {
    if (user) {
      setEditValues({
        username: user.username || "",
        email: user.email || "",
      });
    }
  }, [user]);

  const handleEdit = (field: string) => {
    setEditingField(field);
  };

  const handleCancel = () => {
    // Reset values to original
    if (user) {
      setEditValues({
        username: user.username || "",
        email: user.email || "",
      });
    }
    setEditingField(null);
  };

  const handleSave = async (field: string) => {
    if (!user) return;

    setSaving(true);
    try {
      const updates: any = {};

      if (field === "username") {
        updates.username = editValues.username;
      } else if (field === "email") {
        // Note: Email updates might need special handling in Supabase
        toast.error(
          "Email updates require verification. Please contact support."
        );
        setSaving(false);
        setEditingField(null);
        return;
      }

      const { data, error } = await profileService.updateProfile(
        user.id,
        updates
      );

      if (error) {
        toast.error("Failed to update profile");
        console.error("Profile update error:", error);
      } else {
        // Update local user state
        setUser({ ...user, ...updates });
        toast.success(
          `${
            field.charAt(0).toUpperCase() + field.slice(1)
          } updated successfully!`
        );
      }
    } catch (err) {
      toast.error("An unexpected error occurred");
      console.error("Update error:", err);
    } finally {
      setSaving(false);
      setEditingField(null);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50">
        <div className="max-w-4xl mx-auto px-4 py-8">
          <div className="animate-pulse shadow rounded-lg bg-white divide-y divide-gray-200">
            <div className="flex flex-col">
              <div className="p-6 flex flex-col">
                <div className="flex items-center space-x-4">
                  <div className="w-20 h-20 bg-gray-300 rounded-full"></div>
                  <div className="space-y-2.5">
                    <div className="h-6 bg-gray-300 rounded w-48"></div>
                    <div className="h-5 bg-gray-300 rounded w-60"></div>
                  </div>
                </div>
              </div>
            </div>
            <div className="p-7 flex flex-col w-9/20 item-center space-y-7">
              <div className="bg-gray-300 rounded w-45 h-5"></div>
              <div className="grid grid-cols-2 grid-rows-4 gap-y-5 gap-x-2">
                <div className="bg-gray-300 rounded w-22 h-4"></div>
                <div className="bg-gray-300 rounded w-22 h-4"></div>
                <div className="bg-gray-300 rounded w-16 h-4"></div>
                <div className="bg-gray-300 rounded w-32 h-4"></div>
                <div className="bg-gray-300 rounded w-32 h-4"></div>
                <div className="bg-gray-300 rounded w-22 h-4"></div>
                <div className="bg-gray-300 rounded w-25 h-4"></div>
                <div className="bg-gray-300 rounded w-10 h-4"></div>
              </div>
            </div>
            <div className="p-6 flex item-center space-x-4">
              <div className="bg-gray-300 rounded w-26 h-10"></div>
              <div className="bg-gray-300 rounded w-26 h-10"></div>

              <div></div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Back Button */}
        <div className="mb-6">
          <button
            onClick={() => router.push("/home")}
            className="flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors"
          >
            <ArrowLeft className="w-5 h-5" />
            <span style={typography.button}>Back to Home</span>
          </button>
        </div>

        <div className="bg-white rounded-lg shadow">
          {/* Profile Header */}
          <div className="p-6 border-b border-gray-200">
            <div className="flex items-center space-x-6">
              <div className="relative group">
                {user?.avatar_url ? (
                  <img
                    src={user.avatar_url}
                    alt={user.username || "Profile"}
                    className="w-20 h-20 rounded-full object-cover"
                  />
                ) : (
                  <div className="w-20 h-20 bg-gray-300 rounded-full flex items-center justify-center">
                    <svg
                      className="w-8 h-8 text-gray-600"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                      />
                    </svg>
                  </div>
                )}
                <button className="absolute bottom-0 right-0 bg-gray-900 text-white p-1.5 rounded-full hover:bg-gray-800 transition-colors opacity-0 group-hover:opacity-100">
                  <Camera className="w-3 h-3" />
                </button>
              </div>
              <div>
                <h1
                  className="text-2xl font-bold text-gray-900"
                  style={typography.hero}
                >
                  {user?.username || "User"}
                </h1>
                <p className="text-gray-600" style={typography.caption}>
                  Member since{" "}
                  {new Date(user?.created_at || "").toLocaleDateString()}
                </p>
              </div>
            </div>
          </div>

          {/* Profile Details */}
          <div className="p-6 space-y-6">
            <div>
              <h2
                className="text-lg font-semibold text-gray-900 mb-4"
                style={typography.sectionHeader}
              >
                Profile Information
              </h2>
              <div className="space-y-2">
                {/* Username Field */}
                <div className="flex items-center justify-between py-2">
                  <div className="flex items-center space-x-4 flex-1">
                    <label
                      className="block text-sm font-medium text-gray-700 w-24"
                      style={typography.technical}
                    >
                      Username
                    </label>
                    {editingField === "username" ? (
                      <div className="flex items-center space-x-2 flex-1">
                        <input
                          type="text"
                          value={editValues.username}
                          onChange={(e) =>
                            setEditValues({
                              ...editValues,
                              username: e.target.value,
                            })
                          }
                          className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                          style={typography.technical}
                          disabled={saving}
                        />
                        <button
                          onClick={() => handleSave("username")}
                          disabled={saving}
                          className="p-2 text-green-600 hover:bg-green-50 rounded-md transition-colors disabled:opacity-50"
                        >
                          <Check className="w-4 h-4" />
                        </button>
                        <button
                          onClick={handleCancel}
                          disabled={saving}
                          className="p-2 text-red-600 hover:bg-red-50 rounded-md transition-colors disabled:opacity-50"
                        >
                          <X className="w-4 h-4" />
                        </button>
                      </div>
                    ) : (
                      <div className="flex items-center justify-between flex-1">
                        <p
                          className="text-gray-900"
                          style={typography.technical}
                        >
                          {user?.username || "Not set"}
                        </p>
                        <button
                          onClick={() => handleEdit("username")}
                          className="p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-md transition-colors"
                        >
                          <Edit3 className="w-4 h-4" />
                        </button>
                      </div>
                    )}
                  </div>
                </div>

                {/* Email Field */}
                <div className="flex items-center justify-between py-2">
                  <div className="flex items-center space-x-4 flex-1">
                    <label
                      className="block text-sm font-medium text-gray-700 w-24"
                      style={typography.technical}
                    >
                      Email
                    </label>
                    <div className="flex items-center justify-between flex-1">
                      <p className="text-gray-900" style={typography.technical}>
                        {user?.email || "Not available"}
                      </p>
                      <button
                        onClick={() =>
                          toast(
                            "Email changes require verification. Contact support.",
                            { icon: "ℹ️" }
                          )
                        }
                        className="p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-md transition-colors"
                        title="Email changes require verification"
                      >
                        <Edit3 className="w-4 h-4" />
                      </button>
                    </div>
                  </div>
                </div>

                {/* Account Created (Read-only) */}
                <div className="flex items-center justify-between py-2">
                  <div className="flex items-center space-x-4 flex-1">
                    <label
                      className="block text-sm font-medium text-gray-700 w-24"
                      style={typography.technical}
                    >
                      Joined
                    </label>
                    <p className="text-gray-900" style={typography.technical}>
                      {user?.created_at
                        ? new Date(user.created_at).toLocaleDateString()
                        : "Unknown"}
                    </p>
                  </div>
                </div>

                {/* Last Updated (Read-only) */}
                <div className="flex items-center justify-between py-2">
                  <div className="flex items-center space-x-4 flex-1">
                    <label
                      className="block text-sm font-medium text-gray-700 w-24"
                      style={typography.technical}
                    >
                      Updated
                    </label>
                    <p className="text-gray-900" style={typography.technical}>
                      {user?.updated_at
                        ? new Date(user.updated_at).toLocaleDateString()
                        : "Unknown"}
                    </p>
                  </div>
                </div>
              </div>
            </div>

            {/* Settings Section */}
            <div className="pt-6 border-t border-gray-200">
              <button
                onClick={() => router.push("/profile/setting")}
                className="px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors"
                style={typography.button}
              >
                Manage Settings
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
